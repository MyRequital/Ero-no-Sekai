<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>{% block title %}Ero no Sekai: Shinigami{% endblock %}</title>
    <link rel="preload" as="image" href="/static/favicon64.ico" type="image/x-icon">
    <link rel="icon" href="/static/favicon64.ico" type="image/x-icon">

    <style>
        :root {
            --main-color: #8b0000;
            --button-bg: rgba(255, 0, 0, 0.15);
            --hover-bg: rgba(255, 0, 0, 0.3);
            --bg-overlay: rgba(0, 0, 0, 0.8);
            --content-max-width: 1600px;
            --border-blood: 2px solid #ff0000;
        }

        * {
            box-sizing: border-box;
        }

        body {
            margin: 0;
            padding: 0;
            background: #000 url('/static/pictures/main_theme_stability.jpg') no-repeat center center;
            background-size: cover;
            font-family: Arial, sans-serif;
            color: {{ text_color }};
            min-height: 100vh;
            display: flex;
            justify-content: center;
        }

        .layout {
            display: flex;
            width: 100%;
            max-width: var(--content-max-width);
            min-height: 100vh;
        }

        .side-strip-left,
        .side-strip-right {
            flex: 1;
            background-color: rgba(0, 0, 0, 0.3);
            display: none;
        }

        .content-wrapper {
            flex: 0 0 960px;
            background-color: var(--bg-overlay);
            box-shadow: 0 0 20px rgba(255, 0, 0, 0.4);
            padding: 32px 24px;
            position: relative;
            border: var(--border-blood);
            border-radius: 16px;
            animation: fadeIn 1s ease-in-out;
        }

        @keyframes fadeIn {
            from { opacity: 0; transform: scale(0.98); }
            to { opacity: 1; transform: scale(1); }
        }

        .top-area {
            display: flex;
            flex-direction: column;
            align-items: center;
        }

        .nav-wrapper {
            display: flex;
            justify-content: center;
            padding: 20px;
        }

        .top-navigation {
            display: flex;
            gap: 1rem;
            margin-top: 16px;
            padding: 12px 16px;
            border-radius: 16px;
            background-color: var(--main-color);
            box-shadow: 0 0 12px red;
            border: var(--border-blood);
        }

        .button-link {
            padding: 10px 16px;
            color: white;
            background-color: var(--button-bg);
            text-decoration: none;
            font-weight: bold;
            border-radius: 8px;
            border: 1px solid red;
            transition: all 0.3s ease;
        }

        .button-link:hover {
            background-color: var(--hover-bg);
            box-shadow: 0 0 8px red;
            transform: scale(1.05);
        }

        .bot-try-button {
            margin-top: 10px;
            padding: 20px 16px;
            border-radius: 16px;
            background-color: var(--main-color);
            box-shadow: 0 0 16px rgba(255, 0, 0, 0.6);
            border: var(--border-blood);
            animation: pulse 2s infinite;
        }

        @keyframes pulse {
            0%, 100% { box-shadow: 0 0 10px red; }
            50% { box-shadow: 0 0 20px #ff0000; }
        }

        .mobile-menu-toggle {
            display: none;
            position: fixed;
            bottom: 20px;
            left: 20px;
            background-color: var(--main-color);
            border: none;
            border-radius: 50%;
            width: 48px;
            height: 48px;
            font-size: 24px;
            box-shadow: 0 0 10px red;
            cursor: pointer;
            z-index: 999;
            color: white;
        }

        .container {
            display: flex;
            flex-direction: column;
            align-items: center;
            gap: 20px;
            margin-top: 32px;
        }

        .text-block {
            background-color: rgba(0, 0, 0, 0.7);
            padding: 30px 40px;
            border-radius: 12px;
            max-width: 600px;
            text-align: center;
            box-shadow: 0 0 15px red;
            border: 1px solid darkred;
            position: relative; /* ДЛЯ ОТНОСИТЕЛЬНОЙ ПОЗИЦИИ SVG */
            overflow: visible;
        }

        .mobile-nav {
            display: none;
            position: fixed;
            bottom: 80px;
            left: 20px;
            flex-direction: column;
            gap: 10px;
            background-color: var(--main-color);
            padding: 12px;
            border-radius: 12px;
            box-shadow: 0 0 10px red;
            z-index: 998;
        }

        .qr-container {
            position: absolute;
            top: 10px;
            left: 10px;
            text-align: center;
            color: {{ text_color }};
            font-size: 14px;
            font-weight: bold;
        }

        .qr-code {
            width: 160px;
            height: 160px;
            display: block;
            margin-bottom: 5px;
            border: 6px solid red;
        }

        @media (min-width: 1024px) {
            .side-strip-left,
            .side-strip-right {
                display: block;
            }
        }

        @media (max-width: 768px) {
            .nav-wrapper {
                display: none;
            }

            .mobile-menu-toggle {
                display: block;
            }

            .content-wrapper {
                width: 100%;
                padding: 16px 12px;
            }
        }

        .blood-drop {
          position: absolute;
          top: -20px;
          left: 50%;
          transform: translateX(-50%);
          animation: drip 3s infinite ease-in;
          opacity: 0;
          pointer-events: none;
        }

        @keyframes drip {
          0% {
            transform: translateX(-50%) translateY(0) scaleY(1);
            opacity: 1;
          }
          70% {
            transform: translateX(-50%) translateY(40px) scaleY(1.2);
            opacity: 1;
          }
          100% {
            transform: translateX(-50%) translateY(70px) scaleY(0.8);
            opacity: 0;
          }
        }

    </style>

    {% block head %}{% endblock %}
</head>
<body>
<div class="layout">
    <div class="side-strip-left"></div>
    <main class="content-wrapper">
        <div class="top-area">
            <div class="nav-wrapper">
                <nav class="top-navigation">
                    <a href="/" class="button-link">Главная</a>
                    <a href="/bot_commands" class="button-link">О командах бота</a>
                    <a href="/about" class="button-link">О проекте</a>
                </nav>
            </div>
            <div class="bot-try-button">
                <a href="https://t.me/EroNoSekai_Shinigami_bot" class="button-link">Испытать бота</a>
            </div>
            {% block swiper_content %}{% endblock %}
        </div>
        <div class="qr-container">
            <img src="{{ qr_image }}" alt="QR Code" class="qr-code" />
            <div>Наша группа</div>
        </div>
        <button class="mobile-menu-toggle" onclick="toggleMenu()">☰</button>
        <nav class="mobile-nav" id="mobileNav">
            <a href="/" class="button-link">Главная</a>
            <a href="/bot_commands" class="button-link">Команды</a>
            <a href="/about" class="button-link">Проект</a>
        </nav>
        {% block body %}{% endblock %}
    </main>
    <div class="side-strip-right"></div>
</div>
<script>
    const nav = document.getElementById('mobileNav');
    const toggleBtn = document.querySelector('.mobile-menu-toggle');
    let menuOpen = false;

    function toggleMenu() {
        menuOpen = !menuOpen;
        nav.style.display = menuOpen ? 'flex' : 'none';
        toggleBtn.blur();
    }

    document.addEventListener('click', (event) => {
        const isClickInsideMenu = nav.contains(event.target);
        const isClickOnToggle = toggleBtn.contains(event.target);

        if (menuOpen && !isClickInsideMenu && !isClickOnToggle) {
            nav.style.display = 'none';
            menuOpen = false;
        }
    });

    let lastScrollY = window.scrollY;
    window.addEventListener('scroll', () => {
        toggleBtn.style.opacity = window.scrollY > lastScrollY ? '0' : '1';
        lastScrollY = window.scrollY;
    });
</script>
</body>
</html>
